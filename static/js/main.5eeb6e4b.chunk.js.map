{"version":3,"sources":["assets/img/logo.png","assets/img/bg.png","components/Navbar/index.js","components/Landing/index.js","components/Separator/index.js","components/ImageText/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","React","useState","show","setShow","Brand","src","logo","alt","height","width","Toggle","Collapse","className","onClick","onHide","Header","closeButton","Title","Body","Footer","style","color","window","location","href","bg","Seperator","props","state","backgroundColor","textAlign","fontSize","margin","this","text","Component","ImageText","renderText","title","renderImage","orientation","App","Fragment","Landing","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,6OC+C5BC,EAzCI,WAAO,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAKxB,OACC,oCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAOC,MAAR,KACC,yBAAKC,IAAKC,IAAMC,IAAI,aAAaC,OAAQ,GAAIC,MAAO,MAErD,kBAAC,IAAOC,OAAR,MACA,kBAAC,IAAOC,SAAR,CAAiBC,UAAU,uBAC1B,4BAAQA,UAAU,2BAA2BC,QAV/B,kBAAMV,GAAQ,KAU5B,cAMH,kBAAC,IAAD,CAAOD,KAAMA,EAAMY,OAjBD,kBAAMX,GAAQ,KAkB/B,kBAAC,IAAMY,OAAP,CAAcC,aAAW,GACxB,kBAAC,IAAMC,MAAP,uBAED,kBAAC,IAAMC,KAAP,uBACgB,6BACf,8BAMD,kBAAC,IAAMC,OAAP,sBACiB,0BAAMC,MAAO,CAAEC,MAAO,QAAtB,UADjB,qC,kDCAWtB,EAhCI,WAClB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKa,UAAU,eACd,kBAAC,IAAD,KACC,yBAAKA,UAAU,gBACd,4BACC,0BAAMQ,MAAO,CAAEC,MAAO,YAAtB,aACA,6BAFD,gBAKkB,iEAClB,4BACCR,QAAS,kBAAIS,OAAOC,SAASC,KAAO,iDACpCZ,UAAU,8BAFX,YAPD,eAcC,4BAAQA,UAAU,8BAAlB,gBAGF,kBAAC,IAAD,KACC,yBAAKA,UAAU,wBACd,yBAAKP,IAAKoB,IAAIlB,IAAI,U,wCCHTmB,E,YArBX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKrB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKhB,UAAU,kBACd,kBAAC,IAAD,KACC,wBAAIQ,MAAO,CAAES,gBAAiB,UAAWrB,OAAQ,cAElD,kBAAC,IAAD,KAAK,uBAAGY,MAAO,CAACU,UAAW,SAAUC,SAAS,MAAMC,OAAO,MAAOX,MAAM,YAAaY,KAAKN,MAAMO,OAChG,kBAAC,IAAD,KACC,wBAAId,MAAO,CAAES,gBAAiB,UAAWrB,OAAQ,oB,GAd/BR,IAAMmC,WC6BfC,E,YA7BX,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KAIVU,WAAa,SAACC,EAAOJ,GACjB,OACI,oCACA,4BAAKI,GACL,2BAAIJ,KATO,EAcnBK,YAAc,SAAClC,GACX,OACI,yBAAKA,IAAKA,KAdd,EAAKuB,MAAS,GAFC,E,sEAqBf,MAA4B,SAAzBK,KAAKN,MAAMa,YACH,YAEA,gB,GAzBKxC,IAAMmC,W,YCgBfM,MAXf,WACC,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,EAAD,MACA,kBAACC,EAAD,MACA,kBAAC,EAAD,CAAWT,KAAK,UAChB,kBAAC,EAAD,CAAWM,YAAY,WCHNI,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5eeb6e4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a903e488.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.3a36adf2.png\";","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Modal from \"react-bootstrap/Modal\";\nimport logo from \"../../assets/img/logo.png\";\n\nconst Navigation = () => {\n\tconst [show, setShow] = React.useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Navbar>\n\t\t\t\t\t<Navbar.Brand>\n\t\t\t\t\t\t<img src={logo} alt=\"BSoAI Logo\" height={65} width={65}></img>\n\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t<Navbar.Toggle />\n\t\t\t\t\t<Navbar.Collapse className=\"justify-content-end\">\n\t\t\t\t\t\t<button className=\"btn btn-info fade-button\" onClick={handleShow}>\n\t\t\t\t\t\t\tContact\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Navbar.Collapse>\n\t\t\t\t</Navbar>\n\t\t\t</Container>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Modal heading</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\tComing soon :) <br />\n\t\t\t\t\t<br />\n\t\t\t\t\t{/*<button className=\"btn btn-info normal-button\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t\t*/}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\tMade with &nbsp;<span style={{ color: \"red\" }}>&hearts;</span>&nbsp;\n\t\t\t\t\tby Bucharest School of AI\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport bg from \"../../assets/img/bg.png\";\n\nconst Navigation = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Row className=\"grid-system\">\n\t\t\t\t<Col>\n\t\t\t\t\t<div className='landing-text'>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<span style={{ color: \"#FFA800\" }}>Bucharest</span>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tSchool of AI\n\t\t\t\t\t\t</h1>\n                        <p>World-class AI education for free.</p>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={()=>window.location.href = 'https://www.facebook.com/bucharestschoolofai/'}\n\t\t\t\t\t\t\tclassName=\"btn btn-info normal-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tJoin now\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<button className=\"btn btn-info normal-button\">Learn More</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<div className=\"landing-illustration\">\n\t\t\t\t\t\t<img src={bg} alt=\"\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nclass Seperator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row className=\"separator-grid\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<hr style={{ backgroundColor: \"#ff6f00\", height: \"0.035em\" }}></hr>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col><p style={{textAlign: \"center\", fontSize:\"2em\",margin:\"0px\", color:\"#ff6f00\"}}>{this.props.text}</p></Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<hr style={{ backgroundColor: \"#ff6f00\", height: \"0.035em\" }}></hr>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default Seperator;\n","import React from 'react';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass ImageText extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state  = {};\n    };\n\n    renderText = (title, text) => {\n        return(\n            <>\n            <h1>{title}</h1>\n            <p>{text}</p>\n            </>\n        );\n    };\n\n    renderImage = (src) => {\n        return(\n            <img src={src}></img>\n        );\n    };\n\n    render() {\n        if(this.props.orientation===\"left\") {\n            return('leftright');\n        } else {\n            return('rightleft')\n        }\n    }\n};\n\nexport default ImageText;","import React from \"react\";\nimport Navigation from \"./components/Navbar\";\nimport Landing from \"./components/Landing\";\nimport Seperator from \"./components/Separator\";\nimport ImageText from \"./components/ImageText\";\t\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Navigation></Navigation>\n\t\t\t<Landing></Landing>\n\t\t\t<Seperator text=\"About\"></Seperator>\n\t\t\t<ImageText orientation=\"left\"></ImageText>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}